pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--chrome dino
--by yolwoocle
clock=0
debug=false
framebyframe=true

gravity=0.5
groundy=110
jumpforce=-5
spdcap=-5
speed=-2.7
distance=0
bgcolor=7 --5;6;7 -> ‚ñà‚ñí‚ñë

gameover = false
gameovertext = false
gmov_y = 0
deathframe = 0
if stat(6)=="" then
 highscore=0
else
 highscore=stat(6)
end
newhighscore=false
score = 0

poke(0x5f2d,1)

 function gameov()
  if gameover then
   d=deathframe
   d+= 1
   dino.sizex=2
   fdead=35+13*2
   if score>tonum(highscore) then
    highscore=score
    newhighscore=true
   end
   
   if isbtw(d,35,fdead) then
    dinodeathanim()
   elseif fdead<d then
    dino.x=14
    dino.frame=132
    dino.flipx=false
    dino.flipy=false
    dino.sizex=3
    if gmov_y<127 then
     gameovertext=true
     gmov_y+=1
    end
    if isbtw(d,fdead+1,fdead+2)then
     dino.y+=1
    elseif d==fdead+4 or d==fdead+8 or d==fdead+12 then
     dino.y+=1
    elseif d==fdead+6 or d==fdead+10 then
     dino.y-=1
    elseif d==fdead+18 then
     ringy=dino.y-5
    elseif isbtw(d,fdead+19,fdead+20) then
     ringy+=1
    end
   end
   
   deathframe=d
  end
 end
 
 
 function b2d(bool)
--converts false/true to -1/1
  r=-1
  if bool then 
   r=1
  else 
   r=-1 
  end
  
  return r
 end
 
 function sprcoor(index)
--converts sprite index to  
--spritesheet coordinates
  res=index
  res*=8
  resx=res%128
  resy=res\128*8
   
  return {x=resx,y=resy}
 end
 
 function sprs(n,x,y,w,h,dw,dh)
--is like spr, but w/ stretch
--doesn't support flipping
  s=sprcoor(n)
  w=(w or 1)*8
  h=(h or 1)*8
  dw=dw or w
  dh=dh or h
  dw*=8*(w/8)
  dh*=8*(h/8)
  x-=(dw-w)/2
  y-=(dh-h)/2
  
  sspr(s.x,s.y,w,h,x,y,dw,dh)
 end
 
 function isbtw(var,min,max)
  r=min<=var and var<=max
  if r!=nil then
   return r
  else
   return false
  end
 end
 
 function clampmax(val,max)
  if val>max then
   val=max
  end
  return val
 end
 
 function updscore()
  if clock % 2 == 0 then
   score += 1
  end
 end
 
 function rand(min,max)
  x=flr(rnd(max-min+1)+min)
  return x
 end
 
 function createanim(
          frame,t,i,min,max)
          --t:speed
          --i:increment	
  if frame<min or frame>max then
   frame=min
  end
  if clock % t == 0 then
   frame += i
   if frame > max then
    frame = min
   end
  end
  return frame
 end
 
 
-->8
--init,update,draw

 function _init()
  score=0
  cls()
  --map()
  --clip(0,13,128,107)
  for i=1,16 do
   genhills()
  end
  
  local xdist=0
  while xdist<140 do
   add(dusts,{x=xdist,
   y=groundy,t=rand(39,43)})
    
   xdist+=rand(12,19)
  end
 end
 
 ------------
 ---update---
 ------------
 function _update()
  clock += 1
  
  if not gameover then
   if(clock % 2 == 0)score += 1
   speed-=0.001
   if speed<spdcap then
    speed=spdcap
   end
   distance-=speed
   
   dinocontrols()
   dino.yvel+=gravity
   dino.y+=dino.yvel
   dinostretch()
   dinoground()
   animatedino()
   
   if distance>200 then
	   cactspawn()
	   cactmove()
	   cactdespawn()
	   cactanim()
   end
   
   dustmove()
   dustspawn()
   dustdespawn()
   
   cloudmove()
   cloudspawn()
   clouddespawn()
   
   hillsmove()
   
   if not debug then
    gameover = dinocheckhit()
   end
  end
  
  gameov()
  if gameover and btn(‚ùé) and deathframe>10 then
   newhighscore=true
   run(highscore)
  end
  
  if debug then
   --while not btn(üÖæÔ∏è) do 
   --end
   while btn(üÖæÔ∏è) do 
   end
  end
 end
 ------------
 ---update---
 ------------

 ------------
 --- draw ---
 ------------
 function _draw()
  --dark bg
  pal()
  delay=10
  incr=5
  if incr+delay<deathframe then
   pal(7,6)
   pal(6,5)
  end
  if incr*2+delay<deathframe then
   pal(7,5)
   pal(6,5)
  end
 
  --terrain and dust
  rectfill(0,0,127,127,bgcolor)
  circ(sunx,suny,sunradius,6)
  
  --clouds layer 0
  cloudsdraw(0)
  
  --hills
  hillsdraw(hillsx)
  
  --clouds layer 1
  cloudsdraw(1)
  
  --ground
  rectfill(0,107,127,127,7)
  
  --ground
  line(0,groundy-4,127,
  groundy-4,6)
  
  if(debug)then line(0,groundy,127,
  groundy,9)end
  
  dustdraw()
  
  --dust kick when jump
  if dustkicktime<3 then
   spr(55,
   dino.x+4+(dustkicktime*speed),
   groundy-8)
  end
  
  cactdraw()
  
  dinodraw()
  
  --game over text
  if gameovertext then
   o=0
   for i=0,7 do
    pal(7,5)
    if isbtw(gmov_y-i,24,26) then
     pal(7,6)
    elseif gmov_y-i>= 27 then
     pal()
    end
    wave=cos((clock+i*5)/45)*2+0.1
    
    spr(i+7,26+o+i*9,
    clampmax(gmov_y-i,30)+wave)
    if(i==3)o=4
    pal()
   end 
   s="‚ùé - replay "
   s2="score: "..score
   s3="highscore: "..highscore
   s4="new highscore !"
   if deathframe > 111 then
    if flr(clock/15)%2==0 then 
     --replay
     print(s,64-#s*2,70,6)
    else
     print(s,64-#s*2,70,7)
    end
     --score
     print(s2,64-#s2*2,47,7)
     print(s3,64-#s3*2,54,6)
     if newhighscore then
      print(s4,64-#s4*2,61,7)
     end
   end
  end
  
  --score
  print("speed "..speed,80,10)
  print(score,110,17,5)
  print("high "..highscore,90,23,5)
  
  --debug text
  if debug then
   print("cpu",5,10,8)
   print(stat(1),20,10,8)
   print("fps",5,20,8)
   print(stat(7),20,20,8)
   
   pset(stat(32),stat(33),9)
   print("x"..stat(32),5,42)
   print("y"..stat(33),5,52)
   
   print("dist  "..distance,10,30,5)
   print("clock "..clock,10,36)
  end
 end
-->8
--dino functions
dino = {
 x=15,
 y=96,
 yvel=0,
 timeoffground=0,
 timeground=0,
 frmcrouch=0,
 maxjump=-6,
 maxhold=1,
 timeslide=0,
 
 --hitbox
 hitbx=0,
 hitby=0,
 hitbw=0,
 hitbh=0,
 
 --animation
 frame=1,
 flipx=false,
 flipy=false,
 strch=10,
 sizex=1,
 bop=0, 
 
 --states
 jumped=false,
 jumping=false,
 crouching=false,
 grndpounding=false,
 sliding=false,
 grnded=false,
}
flipcount=1
ringy=0


 function animatedino()
  frame=33
  sizex=2
  if dino.grnded then
   --walk
   frame = createanim(dino.frame,
           2,2,96,98)
  else
   frame = 98
  end
  if dino.crouching then
   sizex=3
   --crouch
   frame = createanim(dino.frame,
           2,3,100,103)
   if not dino.grnded then
    frame = 100
   end
  end 
  if dino.grndpounding or 
  dino.sliding then
   frame = 108
  end
  dino.sizex = sizex
  dino.frame = frame
 end

 function dinostretch()
  if dino.strch<10 then
    dino.strch-=flr(dino.strch/-7)
   elseif dino.strch>10 then
    dino.strch-=flr(dino.strch/7)
   end
 end
 
 --controls
 function dinocontrols()
  dustkicktime+=1
  
  if dino.grnded then
   if dino.grndpounding then
    dino.sliding=true
    if dino.timeground==1 then 
     dino.strch=8
    end
    if not btn(‚¨áÔ∏è) then
     dino.grndpounding=false
    end
   end
   gravity=0.5
   dino.timeoffground=0
   dino.timeground+=1
  else
   dino.timeoffground+=1
   dino.timeground=0
  end
  
  if btn(‚¨ÜÔ∏è) and dino.grnded 
  then
   dino.jumped=true
   dino.yvel=dino.maxjump
   dino.strch=20
   
   dustkicktime=0
   if btn(‚¨áÔ∏è) then
   --crouch jump
    dino.jumping=true
    dino.yvel*=0.8
   end
  end
  
  --hold for high jump
  if dino.jumped and not btn(‚¨ÜÔ∏è) 
  and dino.yvel < 0 and 
  dino.yvel >= dino.maxjump 
  then
   dino.yvel *= 0.6
  end
  
  --prevent ground pound if 
  --jumping on grnd while crouch
  --until ‚¨áÔ∏è is released
  if not btn(‚¨áÔ∏è) then
   dino.jumping=false
   dino.sliding=false
  end
  
  if btn(‚¨áÔ∏è) then
   dino.crouching=true
   dino.frmcrouch+=1
   if not dino.grnded and 
   not dino.jumping then
    dino.grndpounding=true
    dino.strch+=2
    gravity=2.5
   end
   if dino.frmcrouch==1 and 
   not dino.grndpounding then
    dino.strch=6
   end
  else
   dino.frmcrouch=0
   dino.crouching=false
  end
  
  if dino.crouching then
   dino.hitbx=4
   dino.hitby=6
   dino.hitbw=9
   dino.hitbh=6
  else 
   --walk
   dino.hitbx=4
   dino.hitby=2
   dino.hitbw=7
   dino.hitbh=12
  end
 end
 
 --ground
 function dinoground()
  if dino.y>groundy-16 then
   dino.grnded = true
   dino.yvel = 0
   dino.y=groundy-16
  else
   dino.grnded = false
  end
 end
 
 --collision
 function dinocheckhit()
  hit = false
  
  x1=dino.x + dino.hitbx
  y1=dino.y + dino.hitby
  x2=dino.x + dino.hitbx +
     dino.hitbw
  y2=dino.y + dino.hitby +
     dino.hitbh
  
  for i=1, #cact do
   cx1 = cact[i].x+cact[i].hx
   cy1 = cact[i].y+cact[i].hy
   cx2 = cx1+cact[i].hw
   cy2 = cy1+cact[i].hh
   
   if cx1<x2 and cy1<y2 and
   x1<cx2 and y1<cy2 then
    hit = true
    dino.frame = 3
    deathframe=0
    dino.frame=128
    dino.sizex=2
    dino.strch=10
   end
  end
   
  return hit
 end
 
 
 function dinodeathanim()
  animspeed=2
 
  dino.frame=createanim(dino.frame,animspeed,2,128,131)
  if clock % animspeed == 0 then
   --dino.frame+=2
   flipcount+=1
  end
  if dino.frame>130 then
   --dino.frame=128
  end
  if(flipcount>4)flipcount=1
  
  if flipcount>2 then
   dino.flipx = true
   dino.flipy = true
  else
   dino.flipx = false
   dino.flipy = false
  end
 end
 
 
 function dinodraw()
  --dino outline
   pal()
   pal(5,7)
  for y=-1,1 do
   for x=-1,1 do
    sprs(dino.frame,dino.x+x,dino.y+y,
    dino.sizex,2,
    b2d(not dino.flipx)*(1/(dino.strch/10)),
    b2d(not dino.flipy)*(dino.strch/10))
  
   end
  end
  
  --dino
  pal()
  sprs(dino.frame,dino.x,dino.y,
  dino.sizex,2,
  b2d(not dino.flipx)*(1/(dino.strch/10)),
  b2d(not dino.flipy)*(dino.strch/10))
  
    --hitbox
  x1=dino.x+dino.hitbx
  y1=dino.y+dino.hitby
  x2=dino.x+dino.hitbx+
     dino.hitbw
  y2=dino.y+dino.hitby+
     dino.hitbh
  if(debug)rect(x1,y1,x2,y2,8)

  --dino death ring
  if ringy!=0 then
   spr(5,dino.x-2,ringy)
  end
 end
-->8
--obstacles functions
cact={}
cactdist=20
obstacles={
 --cactus big
 function() return {
 x=127,
 y=groundy-16,
 t="c1",
 s=106,
 sw=2,sh=2,--sprite width and height
 hx=5,hy=4,
 hw=5,hh=10}end,
 --cactus small
 function() return {
 x=127,
 y=groundy-16,
 t="c1",
 s=106,
 sw=2,sh=2,
 hx=5,hy=4,
 hw=5,hh=10}end,
 --cact round
 function() return {
 x=127,
 y=groundy-16,
 t="c3",
 s=111,
 sw=1,sh=2,
 hx=4,hy=6,
 hw=8,hh=8}end,
 --ptero low
 function() return {
 x=140,
 y=groundy-15,
 t="ptero",
 s=78,
 sw=2,sh=2,
 hx=3,hy=6,
 hw=9,hh=3}end,
 --ptero duck
 function() return {
 x=140,
 y=groundy-22,
 t="ptero",
 s=78,
 sw=2,sh=2,
 hx=3,hy=6,
 hw=9,hh=3}end,
}

 function cactspawn()
  if cactdist < distance then
   add(cact,rnd(obstacles)())
   cactdist = 
   distance+rand(70,100)
  end
 end
 
 function cactmove()
  for i=1, #cact do
   cact[i].x += speed
   if cact[i].t=="ptero" then
    cact[i].x += speed*0.3
   end
  end
 end
 
 function cactanim()
  for i=1, #cact do
   if cact[i].t=="ptero" then
    cact[i].s=createanim(
     cact[i].s,6,2,160,162)
   end
  end
 end
 
 function cactdespawn()
  for i=#cact-1,1,-1 do
   if cact[i].x < -16 then 
    del(cact,cact[i])
   end
  end
 end
 
 function cactdraw()
 --cactus and obstacles
  for i=1, #cact do
   --spr(17,cact[i],
       --groundy-8)
   spr(cact[i].s,cact[i].x,
       cact[i].y,cact[i].sw,
       cact[i].sh)
   if cact[i].t=="c3" then
    spr(cact[i].s,cact[i].x+8,
       cact[i].y,cact[i].sw,
       cact[i].sh,1)
   end
  end
  
  --debug
  for i=1, #cact do
   cx1 = cact[i].x+cact[i].hx
   cy1 = cact[i].y+cact[i].hy
   cx2 = cx1+cact[i].hw
   cy2 = cy1+cact[i].hh
   if(debug)rect(cx1,cy1,cx2,cy2,11)
  end
 end
-->8
--hills
hills={1}
hillsincr=
--0/ 1\ 2n 3u 4/ 5/ 6n 7\ 8\ 9u 
 {1,-1,-1, 1, 0, 1, -1,0 ,-1,1}
hillsy=80+(5*8)
hillsx=0
hillsgeny=6
hillsgx=0
hillsspeed=0.5

bgcact={29,60,61}


 function drawsun()
  
 end

 function genhills()
 --0/ 1\ 2n 3u 4/ 5/ 6n 7\ 8\ 9u
  if hillsgeny > 14 then
   hillsfinish({2,6})
  elseif hillsgeny < 9 then
   hillsfinish({3,9})
  else
   if hills[#hills]<10 then
    l=hills[#hills]
   else 
    l=hills[#hills-1]
   end
   
   if l==0 or l==5 or l==3 or l==9 then
    hillsfinish({0,2,4,6})
   elseif l==1 or l==8 or l==2 or l==6 then
    hillsfinish({1,3,7,9})
   elseif l==4 then
    hillsfinish({5})
   elseif l==7 then
    hillsfinish({8})
   end
  end
 end

 function hillsfinish(t)
  r=rnd(t)
  add(hills,r)
  if rand(1,5)==1 then 
   add(hills,rnd({29,60,61}))
  end
  
  hillsgeny+=hillsincr[r+1]
 end
 
 function hillsmove()
  hillsx += flr(speed*hillsspeed)
  if hillsx < -8 then
   hillsx = 0
   hillsgx -= 1
   --scrolling
   if hills[1]<10 then
    hillsy-=hillsincr[del(hills,hills[1])+1] * 8     
   end
   if hills[1]>10 then
    del(hills,hills[1])
   end
    --del(hills,hills[1])
   --end
   genhills()
  end
 end
 

 function hillsdraw(sx)
  y=hillsy
  x=sx
  for i=1, #hills do
--0/ 1\ 2n 3u 4/ 5/ 6n 7\ 8\ 9u
   --ground
   ly=y
   for i=1,ceil((127-y)/8)-3 do
    ly+=8
    spr(62,x,ly)
   end
   
   --hill top
   if hills[i]==0 then
    spr(28,x,y)
    y-=8
   elseif hills[i]==1 then
    spr(28,x,y,1,1,1)
    y+=8
   elseif hills[i]==2 then
    spr(31,x,y)
    y+=8
   elseif hills[i]==3 then
    spr(30,x,y)
    y-=8
   elseif hills[i]==4 then
    spr(44,x,y)
   elseif hills[i]==5 then
    spr(45,x,y)
    y-=8
   elseif hills[i]==6 then
    spr(47,x,y)
    y+=8
   elseif hills[i]==7 then
    spr(45,x,y,1,1,1)
    y+=0
   elseif hills[i]==8 then
    spr(44,x,y,1,1,1)
    y+=8
   elseif hills[i]==9 then
    spr(46,x,y)
    y-=8
   else
    spr(hills[i],x,y-1)
    x-=8
   end
   x+=8
  end
 end
 
 
 
-->8
--dust and clouds
dustkicktime=0

clouds={{x=127,
      y=75,
      spd=0.7,
      t=25,
      lyr=1}}
clouddist=30

sunx=100
suny=30
sunradius=7
suntime=0

dust=39
dustdist=30
-- 39->43
dusts={}


 function dustspawn()
  if dustdist < distance then
   add(dusts, 
     {x=127,y=groundy,t=rand(39,43)})
   dustdist = 
   distance+rand(12,19)
  end
 end
 
 function dustmove()
  for i=1, #dusts do
   dusts[i].x += speed
  end
 end
 
 function dustdespawn()
  for i=#dusts-1,1,-1 do
   if dusts[i].x < 0 then 
    del(dusts,dusts[i])
   end
  end
 end
 
 function dustdraw()
  for i=1, #dusts do
   spr(dusts[i].t,
   dusts[i].x,dusts[i].y)
  end
 end
 
 function cloudspawn()
  if clouddist < distance then
   sp=rand(30,70)/100
   l=1
   if sp < hillsspeed then
    l=0
   end 
   r=add(clouds, 
     {x=127,
      y=rand(25,75),
      spd=sp,
      t=rnd({25}),
      lyr=l}) 
   clouddist = 
   distance+rand(30,100)
  end
 end
 
 function cloudmove()
  for i=1, #clouds do
   clouds[i].x += clouds[i].spd
                  * speed
  end
 end
 
 function clouddespawn()
  for i=#clouds-1,1,-1 do
   if clouds[i].x < -16 then 
    del(clouds,clouds[i])
   end
  end
 end
 
 function cloudsdraw(layer)
  for i=1, #clouds do
   if clouds[i].lyr==layer then 
    spr(clouds[i].t,
    clouds[i].x,clouds[i].y,2,1)
   end
  end
 end
__gfx__
00000000000555500000000000055550055550000777777000000000077777700007700077000077777777770777777077000077777777777777777000000000
00000000005575550005555000577755555550007700007700000000777000770077770077700777777000007700007777000077777000007777777700000000
00700700505575550055755550575755577755550777777000000000770000770777077077777777777000007700007777000077777000007700007700000000
00077000505555555055755550577755575755500000000000000000770000007770007777777777777770007700007777000077777770007700007700000000
00077000555555555055555555555555577755500000000000000000770077777770007777077077777000007700007777000077777000007777777000000000
00700700555555005555555555555500055555550000000000000000770000777777777777000077777000007700007707700770777000007707770000000000
00000000055555005555550005555500000055500000000000000000777000777770007777000077777000007700007700777700777000007700777000000000
00000000005005000500005000500500005555000000000000000000077777707770007777000077777777770777777000077000777777777700077700000000
00000000000550000000000000666600000000000000000000000000000000000000000000000000000000000000000000000006007777006000000600000000
00000000005555050000000006777760000000000000000000000000000000000000000000000000000000000000000000000067007667707660066700000000
00000000505555050000000067777776000000000000000000000000000000000000000000000006600000000000000000000677077666707776677700000000
00000000505555550066066667777776000006666600000000000000005550000000000000000067760660000000000000006777076667707777777700000000
00000000555555500677677767777776000067777766000000000000505550000055500000000677776776000000000000067777077667007777777700000000
00000000555555006777777777777776000677777777600000000000555500005055500000666777777777600000000000677777007667007777777700066000
00000000055555006777777777777776066776666667766000000000055500005555000006777777777777600000000006777777007667007777777706677660
00000000005555006666666666666666666666666666666600000000500050000555000066766666666666600000000067777777007667007777777767777776
00000000000055550000555500000000888888888888888888888888000000000000000000000000000000000000000000000000000000666600006600000000
00000000000575550005755500000000888888888888888888888888000000060660000000006606000006600000000000000000000066777766667700000000
00000000000555000005550000000055558888888888885555888888066600000000000000000000000000000000066000000000006677777777777700000000
00000000050555500505555000000575558888888888857555888888000000000060660006600000066600000066000000000000667777777777777700000000
00000000055555000555550055555555888888885555555588888888000066600000000000000000000000000000000000000066777777777777777700000000
00000000005555050055550000555555588888888855555558888888000000000000000000000000000000000000000000006677777777777777777700000000
00000000050000000000000000000000888888888588888588888888000000000000000000000000000000000000000000667777777777777777777700666600
00000000000000000050050000500050888888888888888888888888000000000000000000000000000000000000000066777777777777777777777766777766
00100000001000008818888800100000881888888818888888888888000060000777077077777777077077077777777000077777000777007777777700007770
01a100000171000081f1888801910000814188888121888888888888000000007700770777777700770777077700770707776767000767707777777707777670
01a111000171110081f1118801911100814111888121118888888888006000007707777777777770770707777770777007676767000766707777777777676677
19a4aa101f79771019f4ff1814929910124144181121221888888888006060000770770770077777077000707777770707676667000767707777777776666667
1aa499101779ff101ff4991819924410144122181221111888888888006660000000000000000000000000000000000007666777000767007777777777766777
1aa9aa10177f77101ff9ff1819949910144244181221221888888888006666000000000000000000000000000000000007776700000767007777777700000000
199491001ff9f1001994918814424100122121881222118888888888066666000000000000000000000000000000000000076700000767007777777700000000
01111000011110008111188801111000011118888111188888888888066666000000000000000000000000000000000000076700000767007777777700000000
cccc7777777777777777777777cccccccccccccccccccccccccccccc555555555555555555555555555555556666666665555555555555550000000007757000
ccc775577777777777777777777ccccccccccccccccccccc77cc7c7c555555555555555555555555555555556668886665555555555558550000000077557000
ccc757557757557557555777657ccccccccccccccc777cc777ccc7cc55775775577777777777777777777775668878a665599955555597f50000000775557000
ccc755757755755555577777567cccccccccccccccccccc77ccc7c7c557757755775575755555575557777756637c7a6655aaaaa555a777e0000007755577000
ccc775577777777777777777777ccccccccccccccccccccccccccccc5555555557755755775755557577777566337aa6655accca5555b7d50777777555570000
777777777777777777777777777777777777777777777777777777775577577557577777777777777777777566633a66655acaca55555c557755575555570000
77777777777777766666666666666666666666666667777555777557557757755777777777777777777777756666666665555555555555557557555555577000
7757776777077766666666666666666666666666656677557557777755555555555555555555555555555555ccccccccc5555555555555555555555555557777
75557666707077666666666677777777555555555656775555577557555555555555555555555555555555555555555555555555555555557555555555555555
77577767770777666666666677777777555555556566775777577777555555555555555555555555555555555555555555555555555555557777755555555557
77777777777777766666666677777777555555556667777555777557555555555557777777555655555555755655557775777555577777550000775555555777
77777777777777777777777777777777555555557777777777777777555555755557555557755656555957757565557775777555577777550000077777777700
55555555555555555555555577777777555555555555555555555555555557575557577757755656565957757565555555555555575557550000000000000000
00000000000000000000000077777777555555550000000000000000555575557557555557755656565557757565577577577775577777550000000000000000
00000000000000000000000077777777555555550000000000000000555555555557777777555656565955755655577577577775555755550000000000000000
00000000000000000000000077777777555555550000000000000000555555555555555555555555555555555555555555555555555555550000000000000000
00000000000000000000000055555550000000000000000000000000000000000000000000000000000007777770000000000000000000000000000000000000
00000000555555500000000557555555000000000000000000000000000000000000000000000000000077555577000000000000000000000000000000000000
00000005575555550000000557555555000000000000000000000000000000000000000000000000077775555557000000000000000000000000000000077777
00000005575555550500000555555555000000000000000000000000000000000000000000000000775775555557000000000005555555000000000000775555
05000005555555550500000555550000000000000000000000000000000000000000000000000000755575555557000000000055755555500000000007757777
05000005555500000550000555555550000000000000000055555550000000000000000000000000755575555557777000500055755555500000000007575577
05500005555555500550005555550000555500005555555557555555000000000000000055555550755575555557757700500055555555500000000077575575
05500055555500000555005555550000005555555555555557555555555500005555555557555555755555555557555705000055550000000000000075755575
05550055555500000055555555550000000055555555555555555555005555555555555557555555755555555557555705000055555555000000000075755755
00555555555500000055555555500000000005555555555555500000000055555555555555555555775555555557555705500555555500000000000075755755
00555555555000000055555555505500000000555555555555555550000005555555555555500000077775555555555705555555555500000000000075755755
00555555555000005505555555055500000550055555550000000000000000555555555555555550000075555555555700555555555505500000000075755755
00055555550000005550000000055000000555000000000055500000000000055555550000000000000075555555557700555555000005500000000075755755
00000000000000000550000000000000000055000000000555000000000000000000000000000000000075555557777000555555055055000000000077575575
00005500550000000000000000000000000000000000000000000000000000550000005500000000000075555557000000055550555000000000000007575575
00005550555000000000000000000000000000000000000000000000000000555000005550000000000075555557000000000000550000000000000007775575
00000000000000000055500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555500555505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000005777555550555505000055000000000000000000000000000000000000000700000077000000000000000000000000000000000000000000000000000
00000005757555550555505000055500055500000055500000000000000000000007700000070000000000000000000000000000000000000000000000000000
05000005777555550555505555005500555505000055550000000000000000000007000000770000000000000000000000000000000000000000000000000000
05000005555000000577755555550000555505000000000005500000000000000007000000700000000000000000000000000000000000000000000000000000
05500005555555500575755555555000555505005555500005550000000000000077000000700000000000000000000000000000000000000000000000000000
05500055555500000577755555555000555505555555555500550000007000000077000000000000000000000000000000000000000000000000000000000000
05555555555500000055555555555000575755555555555555000005007000000077000000000000000000000000000000000000000000000000000000000000
00555555555500000000000555555000557555555555555555555555007000000070000000000000000000000000000000000000000000000000000000000000
00555555555000000000000055555000575755555555555555555500077000000070000000000000000000000000000000000000000000000000000000000000
00555555555055000000000055555000055555555555555555550000077000000070000000000000000000000000000000000000000000000000000000000000
55055555550555000000000055555000000000555555555550000000070000000070000000000000000000000000000000000000000000000000000000000000
55500000000550000000005555550550000000000000000000000000070000000070000000000000000000000000000000000000000000000000000000000000
05500000000000000000555550005550000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000775570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000007755570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000077555770000000000000000000000000666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07777775555700000777770000000000000066777777600000000000000000000000000000000000000000000000000000000000000000000000000000000000
77555755555700007755577770000000000677777777760000000000000000000000000000000000000000000000000000000000000000000000000000000000
75575555555770007557555577777000006777766667776000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555577775555555555557777666666600006666600000000000000000000000000000000000000000000000000000000000000000000000000000000
75555555555555557555555555555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777555555555577777755555555557000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007755555557770000775555555777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000777777777000000077555577700000000666066000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000007755577000000066777677600000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000775557000000677777777760000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000077557000006777777777766000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000007757000666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4041424344444444444444444444454600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5051525252525252525252525252555600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4748494a4b4c4d54545758595a5b5c5d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0101000018000000000000000000010000100001000000000000000000010000100000000000001000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000
